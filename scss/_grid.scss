
// Grid

.container {
  margin: 0 auto;

  @each $breakpoint, $size in $container-max-widths {
    @media (min-width: map-get($grid-breakpoints, $breakpoint)) {
      max-width: $size;
    }
  }
}

// -----------------------------------------------------------------------------

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -($grid-gutter-width / 2);
  margin-right: -($grid-gutter-width / 2);
}

%grid-column {
  position: relative;
  min-height: 1px;
  padding-left: ($grid-gutter-width / 2);
  padding-right: ($grid-gutter-width / 2);
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $i: $grid-columns;
  @while $i > 0 {
    %grid-span-#{$i} {
      flex: 0 0 percentage($i / $grid-columns);
      max-width: percentage($i / $grid-columns);
    }

    .col-#{$breakpoint}-#{$i} {
      @extend %grid-column;
      @extend %grid-span-#{$i};
    }

    %grid-offset-#{$i} {
      margin-left: percentage($i / $grid-columns);
    }

    .col-#{$breakpoint}-offset-#{$i} {
      @extend %grid-offset-#{$i};
    }

    $i: $i - 1;
  }
}

// -----------------------------------------------------------------------------

@each $breakpoint, $size in $grid-breakpoints {
  @media (max-width: $size) {
    $i: $grid-columns;

    @while $i > 0 {
      %grid-break-#{$breakpoint} {
        flex: none;
        width: 100%;
        max-width: 100%;
      }

      .col-#{$breakpoint}-#{$i} {
        @extend %grid-break-#{$breakpoint};
      }

      %grid-break-offset-#{$breakpoint} {
        margin-left: 0;
      }

      .col-#{$breakpoint}-offset-#{$i} {
        @extend %grid-break-offset-#{$breakpoint};
      }

      $i: $i - 1;
    }
  }
}
