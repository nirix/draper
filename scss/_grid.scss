
// Grid

.container {
  margin: 0 auto;

  @each $breakpoint, $size in $container-max-widths {
    @media (min-width: map-get($grid-breakpoints, $breakpoint)) {
      max-width: $size;
    }
  }
}

// -----------------------------------------------------------------------------

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -($grid-gutter-width / 2);
  margin-right: -($grid-gutter-width / 2);
}

%col {
  position: relative;
  min-height: 1px;
  padding-left: ($grid-gutter-width / 2);
  padding-right: ($grid-gutter-width / 2);
}

$i: $grid-columns;
@while $i > 0 {
  %grid-span-#{$i} {
    @extend %col;

    flex: 0 0 percentage($i / $grid-columns);
    max-width: percentage($i / $grid-columns);
  }

  %grid-offset-#{$i} {
    margin-left: percentage($i / $grid-columns);
  }

  @each $breakpoint, $size in $grid-breakpoints {
    .col-#{$breakpoint}-#{$i} {
      @extend %grid-span-#{$i};
    }
  }

  @each $breakpoint, $size in $grid-breakpoints {
    .offset-#{$breakpoint}-#{$i} {
      @extend %grid-offset-#{$i};
    }
  }

  $i: $i - 1;
}

// -----------------------------------------------------------------------------

@each $breakpoint, $size in $grid-breakpoints {
  @media (max-width: $size) {
    %grid-break-#{$breakpoint} {
      flex: none;
      width: 100%;
      max-width: 100%;
    }

    %grid-break-offset-#{$breakpoint} {
      margin-left: 0;
    }

    $i: $grid-columns;
    @while $i > 0 {
      @each $breakpoint in map-keys($grid-breakpoints) {
        .col-#{$breakpoint}-#{$i} {
          @extend %grid-break-#{$breakpoint};
        }

        .offset-#{$breakpoint}-#{$i} {
          @extend %grid-break-offset-#{$breakpoint};
        }
      }

      $i: $i - 1;
    }
  }
}
